@page "/"





<div class="container">


    <div class="row">
        <div class="col-3"></div>
        <div class="col-6">
            <h4>Welcome</h4>
            <h6>Please Login</h6>

            <div class="form-group">
                <label for="username">Email Address</label>
                <input type="text" class="form-control" @bind-value="username" id="username" placeholder="username" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" class="form-control" @bind="password" id="password" placeholder="username" />
            </div>

            <div class="form-group">
                <label class="text-danger"> @errorText </label>
            </div>

            <div class="form-group">
                <button @onclick="Login_click" class="btn btn-primary">Login </button>
            </div>
        </div>

    </div>
</div>

@code {
    [Inject]
    public NavigationManager navigationManager { get; set; }


    private string? username;
    private string? password;
    private string errorText = "";

    private async Task Login_click()
    {
        var user = new UserLoginModel();
        user.Username = username;
        user.Password = password;        

        var request = new HttpRequestMessage(HttpMethod.Post,
          configuration.GetSection("APIURL").Value  + "/Users/authenticate");
        request.Content =new StringContent(JsonSerializer.Serialize(user), Encoding.UTF8, "application/json");

        // request.Headers.Add("Content-Type", "application/json");
        //request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            var userLoginInfo = await JsonSerializer.DeserializeAsync<UserLogin>(responseStream);

            await localStorage.SetItemAsync("token", userLoginInfo.Token);

            navigationManager.NavigateTo("/Incidents");
        }
        else
        {
            errorText = "Invalid username or password.";            
        }

        
    }




}
