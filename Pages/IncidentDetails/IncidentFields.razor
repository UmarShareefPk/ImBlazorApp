

<table class="table field-table table-borderless">
    <tr>
        <td>
            <span class="field-title">Assignee</span>           
        </td>
        <td>
              <input type="text" class="line-textbox" value="Umar Shareef"/>
        </td>
    </tr>
    <tr>
        <td>
            <span class="field-title">Status</span>           
        </td>
        <td>
            <select class="line-textbox">
                <option value="N">New</option>
                <option value="I">In Progress</option>
                <option value="C">Closed</option>
                <option value="A">Approved</option>
            </select>
        </td>
    </tr>
    <tr>
        <td class="field-td">
            <span class="field-title">Start Time</span>            
             <i class="material-icons edit-btn" @onclick="startDateEditToggle" >edit</i>
         </td>
        <td>
            @if(!startDateEditable)
            {
                <span>22 minutes ago</span>
            }
            else
            {
                <RadzenDatePicker ShowTime="true" @bind-Value="startDate" Change=@startDateChange />
                <button class="btn bg-success text-white">Update</button>
            }   
        </td>
    </tr>
    <tr>
        <td class="field-td">
            <span class="field-title">Due Date</span>
            <i class="material-icons edit-btn" @onclick="dueDateEditToggle">edit</i>
        </td>
        <td>
             @if(!dueDateEditable)
            {
                <span>In 2 minutes</span>
            }
            else
            {
                <RadzenDatePicker ShowTime="true" @bind-Value="dueDate" Change=@dueDateChange />
                <button class="btn bg-success text-white">Update</button>
            }   
        </td>
    </tr>
</table>



@code {
    private bool startDateEditable = false;
    private void startDateEditToggle()
    {
        startDateEditable = !startDateEditable;
    }

    private DateTime startDate = DateTime.Now;    

    void startDateChange(DateTime? value)
    {        
    }

    private bool dueDateEditable = false;
    private void dueDateEditToggle()
    {
        dueDateEditable = !dueDateEditable;
    }

    private DateTime dueDate = DateTime.Now;    

    void dueDateChange(DateTime? value)
    {        
    }


}
